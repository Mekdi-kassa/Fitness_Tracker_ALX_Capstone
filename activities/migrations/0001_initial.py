# Generated by Django 5.2.7 on 2025-10-18 15:10

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Leaderboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('all_time', 'All Time')], max_length=10)),
                ('snapshot_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_at', models.DateField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-snapshot_date', 'period'],
            },
        ),
        migrations.CreateModel(
            name='FitnessActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(choices=[('running', 'Running'), ('cycling', 'Cycling'), ('swimming', 'Swimming'), ('walking', 'Walking'), ('weightlifting', 'Weightlifting'), ('yoga', 'Yoga'), ('pilates', 'Pilates'), ('hiit', 'HIIT'), ('dancing', 'Dancing'), ('hiking', 'Hiking'), ('boxing', 'Boxing'), ('rowing', 'Rowing'), ('skipping', 'Skipping'), ('elliptical', 'Elliptical'), ('stair_climbing', 'Stair Climbing')], max_length=20)),
                ('duration', models.IntegerField(help_text='duartion in minutes')),
                ('calories_burned', models.IntegerField()),
                ('distance', models.FloatField()),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('notes', models.TextField(blank=True)),
                ('intensity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High')], default='medium', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Fitness Activities',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='LeaderboardEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank', models.IntegerField()),
                ('points', models.IntegerField()),
                ('calories_burned', models.IntegerField()),
                ('workout_count', models.IntegerField()),
                ('streak', models.IntegerField()),
                ('leaderboard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='entries', to='activities.leaderboard')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['leaderboard', 'rank'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_calories_burned', models.IntegerField(default=0)),
                ('total_workout_time', models.IntegerField(default=0)),
                ('current_streak', models.IntegerField(default=0)),
                ('longest_streak', models.IntegerField(default=0)),
                ('level', models.IntegerField(default=1)),
                ('points', models.IntegerField(default=0)),
                ('last_activity', models.DateField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='WorkoutGoal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('goal_type', models.CharField(choices=[('duration', 'Total Duration'), ('calories', 'Calories Burned'), ('frequency', 'Workout Frequency'), ('distance', 'Total Distance'), ('streak', 'Workout Streak'), ('specific_activity', 'Specific Activity')], max_length=20)),
                ('duration_type', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('yearly', 'Yearly')], max_length=20)),
                ('target_value', models.FloatField(help_text='Target value (minutes, calories, count, etc.)')),
                ('current_value', models.FloatField(default=0)),
                ('unit', models.CharField(help_text='minutes, calories, workouts, km, etc.', max_length=20)),
                ('activity_type', models.CharField(blank=True, choices=[('running', 'Running'), ('cycling', 'Cycling'), ('swimming', 'Swimming'), ('walking', 'Walking'), ('weightlifting', 'Weightlifting'), ('yoga', 'Yoga'), ('pilates', 'Pilates'), ('hiit', 'HIIT'), ('dancing', 'Dancing'), ('hiking', 'Hiking'), ('boxing', 'Boxing'), ('rowing', 'Rowing'), ('skipping', 'Skipping'), ('elliptical', 'Elliptical'), ('stair_climbing', 'Stair Climbing')], max_length=20, null=True)),
                ('start_date', models.DateField(default=django.utils.timezone.now)),
                ('end_date', models.DateField()),
                ('status', models.CharField(choices=[('active', 'Active'), ('completed', 'Completed'), ('failed', 'Failed')], default='active', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workout_goals', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
